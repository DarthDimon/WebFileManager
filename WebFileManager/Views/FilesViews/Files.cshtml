@using WebFileManager.Models.FilesModels
@using System.IO;
@{
    ViewData["Title"] = "Files";
}

<div id="diskInfo">
    <div id="tableDisk">
        <table onclick="VieUnvie()" style="cursor: pointer">
            <tr>
                <td>
                    <img src="~/img/hd_disk_harddisk_162.png" style="height:45px;width:45px" />
                </td>
                <td>
                    <table>
                        <tr>
                            <td>
                                Все пространство дисков
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <progress value="@(WebFileManager.Controllers.FilesController.disk.TotalSize.ToGB(0) - WebFileManager.Controllers.FilesController.disk.TotalFreeSpace.ToGB(0))" max="@WebFileManager.Controllers.FilesController.disk.TotalSize.ToGB(0)"></progress>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @WebFileManager.Controllers.FilesController.disk.TotalFreeSpace.ToGB() ГБ свободно из @WebFileManager.Controllers.FilesController.disk.TotalSize.ToGB() ГБ
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>

        <table id="allDisk" style="display:none">
            @{foreach (DriveInfo driveInfo in WebFileManager.Controllers.FilesController.disk.Disks)
                {
                    <tr>
                        <td width="45px">
                        </td>
                        <td>
                            <img src="~/img/hd_disk_harddisk_162.png" style="height:45px;width:45px" />
                        </td>
                        <td>
                            <table>
                                <tr>
                                    <td>
                                        локальный диск (@driveInfo.Name.Replace("\\", ""))
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <progress value="@(driveInfo.TotalSize.ToGB(0) - driveInfo.TotalFreeSpace.ToGB(0))" max="@driveInfo.TotalSize.ToGB(0)"></progress>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @driveInfo.TotalFreeSpace.ToGB() ГБ свободно из @driveInfo.TotalSize.ToGB() ГБ
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
</div>


<div id="FileBrowser" style="width:100%; height:auto">
    <div id="PanelPath" style="width:100%">
        <div id="PanelPathButtons">
            <button id="left"><img src="~/img/left.png" width="20px" height="10px" /></button>
            <button id="right"><img src="~/img/right.png" width="20px" height="10px" /></button>
        </div>
        <div id="PathNow">@WebFileManager.Controllers.FilesController.folderModels[0].ThisDirectoryInfo.FullName</div>
    </div>

    <div id="PathView" class="FileManager" style="width:30%;">
        fff
    </div>
    <div id="FilesView" class="FileManager" style="width: 70%; height: 100%;">
        <table id="FilesAndFolders">
            <tr>
                <th> Name </th>
                <th>Change date</th>
                <th> Type </th>
                <th> Size </th>
            </tr>
            @{
                foreach (var folder in WebFileManager.Controllers.FilesController.folderModels[0].Folders)
                {
                    <tr class="FileFolderRow">
                        <td>
                            <img src="~/img/folder.png" /> @folder.ThisDirectoryInfo.Name
                        </td>
                        <td>
                            @folder.ThisDirectoryInfo.LastWriteTime
                        </td>
                        <td>
                            Folder
                        </td>
                        <td>
                            @folder.Size.ToMB() MB
                        </td>
                    </tr>
                }
                foreach (var file in WebFileManager.Controllers.FilesController.folderModels[0].Files)
                {
                    <tr class="FileFolderRow">
                        <td>
                            <img src="~/img/file.png" />@file.Name
                        </td>
                        <td>
                            File
                        </td>
                        <td>
                            @file.Length.ToMB() MB
                        </td>
                    </tr>
                }
            }
            <tr>
                <td></td>
            </tr>
        </table>
    </div>
</div>

<script>
    $(dbClickRow())
    function VieUnvie() {
        var table = document.getElementById("allDisk");
        if (table.style.display == "none") {
            table.style.display = "block";
        }
        else {
            table.style.display = "none";
        }
    }


    function dbClickRow () {
        $("tr").dblclick(function (e) {
            var newFolder = this.getElementsByTagName("td")[0].innerText.trim();
            if (this.getElementsByTagName("td")[2].innerText == "Folder") {
                $.ajax({
                    url: '@Url.Action("NewFolder", "Files")',
                    data:{
                        folderName: newFolder
                        , pathNow: $('#PathNow')[0].innerText
                }
                    , type: 'POST'
                    , success: function (data) {
                        $(".FileFolderRow").remove();
                        GetFileFolderRow(data);
                        pathNow: $('#PathNow')[0].innerText = data[0]["CurentPath"];
                    }
                })

            }
            else {
                alert("i can't open files ");
            }
        })

    }
    function GetFileFolderRow(data) {
        for (var i = 0; i < data.length; i++) {
            let tr = document.createElement("tr"),
                td0 = document.createElement("td"),
                td1 = document.createElement("td"),
                td2 = document.createElement("td"),
                td3 = document.createElement("td"),
                img = document.createElement("img");
            if (data[i]["Type"] == "File") { img.src = "/img/file.png" }
            else { img.src = "/img/folder.png" }
            td0.appendChild(img);
            td0.appendChild(document.createTextNode(data[i]["Name"]));
            td1.innerText = data[i]["ChangeDate"];
            td2.innerText = data[i]["Type"];
            td3.innerText = data[i]["Size"] + " MB";
            tr.className = "FileFolderRow";
            tr.append(td0);
            tr.append(td1);
            tr.append(td2);
            tr.append(td3);
            $("#FilesAndFolders").append(tr);
        }
        $(dbClickRow())
    }
</script>
<style>
    .FileManager {
        border: 4px solid;
        border-color: blueviolet;
        float: left
    }

    .FileFolderRow:hover {
        background-color: aqua;
    }

    #PathView {
        float: left;
    }

    #PathNow {
        border: 1px solid;
        border-color: blueviolet;
    }

    #PanelPathButtons {
        float: left;
    }
</style>
